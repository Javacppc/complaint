<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gov.wh.complain.sys.mapper.ComplainfeedbackMapper">
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    <id column="feedbackid" jdbcType="VARCHAR" property="feedbackid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="stype" jdbcType="VARCHAR" property="stype" />
    <result column="reportstatus" jdbcType="VARCHAR" property="reportstatus" />
    <result column="solvedept" jdbcType="VARCHAR" property="solvedept" />
    <result column="helpcompany" jdbcType="VARCHAR" property="helpcompany" />
    <result column="manager" jdbcType="VARCHAR" property="manager" />
    <result column="registor" jdbcType="VARCHAR" property="registor" />
    <result column="satype" jdbcType="INTEGER" property="satype" />
    <result column="compensation" jdbcType="REAL" property="compensation" />
    <result column="quamoney" jdbcType="REAL" property="quamoney" />
    <result column="_restore" jdbcType="REAL" property="restore" />
    <result column="feedbackcontent" jdbcType="VARCHAR" property="feedbackcontent" />
    <result column="spiritmoney" jdbcType="REAL" property="spiritmoney" />
    <result column="involvedsub" jdbcType="VARCHAR" property="involvedsub" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    feedbackid, complainregid, stype, reportstatus, solvedept, helpcompany, manager, 
    registor, satype, compensation, quamoney, _restore, feedbackcontent, spiritmoney, 
    involvedsub
  </sql>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from complainfeedback
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample">
    delete from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback (feedbackid, complainregid, stype, 
      reportstatus, solvedept, helpcompany, 
      manager, registor, satype, 
      compensation, quamoney, _restore, 
      feedbackcontent, spiritmoney, involvedsub
      )
    values (#{feedbackid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{stype,jdbcType=VARCHAR}, 
      #{reportstatus,jdbcType=VARCHAR}, #{solvedept,jdbcType=VARCHAR}, #{helpcompany,jdbcType=VARCHAR}, 
      #{manager,jdbcType=VARCHAR}, #{registor,jdbcType=VARCHAR}, #{satype,jdbcType=INTEGER}, 
      #{compensation,jdbcType=REAL}, #{quamoney,jdbcType=REAL}, #{restore,jdbcType=REAL}, 
      #{feedbackcontent,jdbcType=VARCHAR}, #{spiritmoney,jdbcType=REAL}, #{involvedsub,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    insert into complainfeedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        feedbackid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="stype != null">
        stype,
      </if>
      <if test="reportstatus != null">
        reportstatus,
      </if>
      <if test="solvedept != null">
        solvedept,
      </if>
      <if test="helpcompany != null">
        helpcompany,
      </if>
      <if test="manager != null">
        manager,
      </if>
      <if test="registor != null">
        registor,
      </if>
      <if test="satype != null">
        satype,
      </if>
      <if test="compensation != null">
        compensation,
      </if>
      <if test="quamoney != null">
        quamoney,
      </if>
      <if test="restore != null">
        _restore,
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent,
      </if>
      <if test="spiritmoney != null">
        spiritmoney,
      </if>
      <if test="involvedsub != null">
        involvedsub,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feedbackid != null">
        #{feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        #{involvedsub,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.ComplainfeedbackExample" resultType="java.lang.Integer">
    select count(*) from complainfeedback
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update complainfeedback
    <set>
      <if test="record.feedbackid != null">
        feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.stype != null">
        stype = #{record.stype,jdbcType=VARCHAR},
      </if>
      <if test="record.reportstatus != null">
        reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.solvedept != null">
        solvedept = #{record.solvedept,jdbcType=VARCHAR},
      </if>
      <if test="record.helpcompany != null">
        helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="record.manager != null">
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.registor != null">
        registor = #{record.registor,jdbcType=VARCHAR},
      </if>
      <if test="record.satype != null">
        satype = #{record.satype,jdbcType=INTEGER},
      </if>
      <if test="record.compensation != null">
        compensation = #{record.compensation,jdbcType=REAL},
      </if>
      <if test="record.quamoney != null">
        quamoney = #{record.quamoney,jdbcType=REAL},
      </if>
      <if test="record.restore != null">
        _restore = #{record.restore,jdbcType=REAL},
      </if>
      <if test="record.feedbackcontent != null">
        feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.spiritmoney != null">
        spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      </if>
      <if test="record.involvedsub != null">
        involvedsub = #{record.involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update complainfeedback
    set feedbackid = #{record.feedbackid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      stype = #{record.stype,jdbcType=VARCHAR},
      reportstatus = #{record.reportstatus,jdbcType=VARCHAR},
      solvedept = #{record.solvedept,jdbcType=VARCHAR},
      helpcompany = #{record.helpcompany,jdbcType=VARCHAR},
      manager = #{record.manager,jdbcType=VARCHAR},
      registor = #{record.registor,jdbcType=VARCHAR},
      satype = #{record.satype,jdbcType=INTEGER},
      compensation = #{record.compensation,jdbcType=REAL},
      quamoney = #{record.quamoney,jdbcType=REAL},
      _restore = #{record.restore,jdbcType=REAL},
      feedbackcontent = #{record.feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{record.spiritmoney,jdbcType=REAL},
      involvedsub = #{record.involvedsub,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="stype != null">
        stype = #{stype,jdbcType=VARCHAR},
      </if>
      <if test="reportstatus != null">
        reportstatus = #{reportstatus,jdbcType=VARCHAR},
      </if>
      <if test="solvedept != null">
        solvedept = #{solvedept,jdbcType=VARCHAR},
      </if>
      <if test="helpcompany != null">
        helpcompany = #{helpcompany,jdbcType=VARCHAR},
      </if>
      <if test="manager != null">
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="registor != null">
        registor = #{registor,jdbcType=VARCHAR},
      </if>
      <if test="satype != null">
        satype = #{satype,jdbcType=INTEGER},
      </if>
      <if test="compensation != null">
        compensation = #{compensation,jdbcType=REAL},
      </if>
      <if test="quamoney != null">
        quamoney = #{quamoney,jdbcType=REAL},
      </if>
      <if test="restore != null">
        _restore = #{restore,jdbcType=REAL},
      </if>
      <if test="feedbackcontent != null">
        feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      </if>
      <if test="spiritmoney != null">
        spiritmoney = #{spiritmoney,jdbcType=REAL},
      </if>
      <if test="involvedsub != null">
        involvedsub = #{involvedsub,jdbcType=VARCHAR},
      </if>
    </set>
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Complainfeedback">
    update complainfeedback
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=VARCHAR},
      reportstatus = #{reportstatus,jdbcType=VARCHAR},
      solvedept = #{solvedept,jdbcType=VARCHAR},
      helpcompany = #{helpcompany,jdbcType=VARCHAR},
      manager = #{manager,jdbcType=VARCHAR},
      registor = #{registor,jdbcType=VARCHAR},
      satype = #{satype,jdbcType=INTEGER},
      compensation = #{compensation,jdbcType=REAL},
      quamoney = #{quamoney,jdbcType=REAL},
      _restore = #{restore,jdbcType=REAL},
      feedbackcontent = #{feedbackcontent,jdbcType=VARCHAR},
      spiritmoney = #{spiritmoney,jdbcType=REAL},
      involvedsub = #{involvedsub,jdbcType=VARCHAR}
    where feedbackid = #{feedbackid,jdbcType=VARCHAR}
  </update>
</mapper>