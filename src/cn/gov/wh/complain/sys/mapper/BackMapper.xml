<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gov.wh.complain.sys.mapper.BackMapper">
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.gov.wh.complain.sys.pojo.Back">
    <id column="returnid" jdbcType="VARCHAR" property="returnid" />
    <result column="complainregid" jdbcType="VARCHAR" property="complainregid" />
    <result column="repid" jdbcType="VARCHAR" property="repid" />
    <result column="returnperson" jdbcType="VARCHAR" property="returnperson" />
    <result column="returncause" jdbcType="VARCHAR" property="returncause" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.gov.wh.complain.sys.pojo.Back">
    <result column="returnadvice" jdbcType="LONGVARCHAR" property="returnadvice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    returnid, complainregid, repid, returnperson, returncause, contact
  </sql>
  <sql id="Blob_Column_List">
    returnadvice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from back
    where returnid = #{returnid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample">
    delete from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back (returnid, complainregid, repid, 
      returnperson, returncause, contact, 
      returnadvice)
    values (#{returnid,jdbcType=VARCHAR}, #{complainregid,jdbcType=VARCHAR}, #{repid,jdbcType=VARCHAR}, 
      #{returnperson,jdbcType=VARCHAR}, #{returncause,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{returnadvice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    insert into back
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        returnid,
      </if>
      <if test="complainregid != null">
        complainregid,
      </if>
      <if test="repid != null">
        repid,
      </if>
      <if test="returnperson != null">
        returnperson,
      </if>
      <if test="returncause != null">
        returncause,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="returnadvice != null">
        returnadvice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="returnid != null">
        #{returnid,jdbcType=VARCHAR},
      </if>
      <if test="complainregid != null">
        #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.gov.wh.complain.sys.pojo.BackExample" resultType="java.lang.Integer">
    select count(*) from back
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update back
    <set>
      <if test="record.returnid != null">
        returnid = #{record.returnid,jdbcType=VARCHAR},
      </if>
      <if test="record.complainregid != null">
        complainregid = #{record.complainregid,jdbcType=VARCHAR},
      </if>
      <if test="record.repid != null">
        repid = #{record.repid,jdbcType=VARCHAR},
      </if>
      <if test="record.returnperson != null">
        returnperson = #{record.returnperson,jdbcType=VARCHAR},
      </if>
      <if test="record.returncause != null">
        returncause = #{record.returncause,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.returnadvice != null">
        returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      returnadvice = #{record.returnadvice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update back
    set returnid = #{record.returnid,jdbcType=VARCHAR},
      complainregid = #{record.complainregid,jdbcType=VARCHAR},
      repid = #{record.repid,jdbcType=VARCHAR},
      returnperson = #{record.returnperson,jdbcType=VARCHAR},
      returncause = #{record.returncause,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    <set>
      <if test="complainregid != null">
        complainregid = #{complainregid,jdbcType=VARCHAR},
      </if>
      <if test="repid != null">
        repid = #{repid,jdbcType=VARCHAR},
      </if>
      <if test="returnperson != null">
        returnperson = #{returnperson,jdbcType=VARCHAR},
      </if>
      <if test="returncause != null">
        returncause = #{returncause,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="returnadvice != null">
        returnadvice = #{returnadvice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      returnadvice = #{returnadvice,jdbcType=LONGVARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gov.wh.complain.sys.pojo.Back">
    update back
    set complainregid = #{complainregid,jdbcType=VARCHAR},
      repid = #{repid,jdbcType=VARCHAR},
      returnperson = #{returnperson,jdbcType=VARCHAR},
      returncause = #{returncause,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR}
    where returnid = #{returnid,jdbcType=VARCHAR}
  </update>
</mapper>